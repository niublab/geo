name: update-youtube-geoip

on:
  schedule:
    - cron: '*/5 * * * *'   # 每 5 分钟运行一次（UTC）
  workflow_dispatch: {}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          persist-credentials: true

      - name: Fetch and build CIDR list
        run: |
          set -e
          echo "Download cidr4/cidr6 from touhidurrr (lists/ directory)..."
          URL4="https://raw.githubusercontent.com/touhidurrr/iplist-youtube/main/lists/cidr4.txt"
          URL6="https://raw.githubusercontent.com/touhidurrr/iplist-youtube/main/lists/cidr6.txt"
          curl -sS --fail --show-error --retry 5 --retry-delay 2 --max-time 30 -o cidr4.txt "$URL4" || true
          curl -sS --fail --show-error --retry 5 --retry-delay 2 --max-time 30 -o cidr6.txt "$URL6" || true

          if [ ! -s cidr4.txt ] && [ ! -s cidr6.txt ]; then
            echo "ERROR: both cidr4.txt and cidr6.txt are missing or empty. Exiting."
            exit 1
          fi

          cat cidr4.txt cidr6.txt 2>/dev/null \
            | sed 's/^[[:space:]]*//;s/[[:space:]]*$//' \
            | grep -v '^#' \
            | grep -v '^$' \
            | sort -u > cidr_all.txt
          echo "Lines in cidr_all.txt:" $(wc -l < cidr_all.txt)

      - name: Check if CIDR changed
        id: check
        run: |
          set -e
          NEW_HASH=$(sha256sum cidr_all.txt | cut -d' ' -f1)
          if [ -f last_cidr_sha.txt ]; then
            OLD_HASH=$(cat last_cidr_sha.txt)
          else
            OLD_HASH=""
          fi
          echo "old=$OLD_HASH" > hashinfo.txt
          echo "new=$NEW_HASH" >> hashinfo.txt
          if [ "$NEW_HASH" = "$OLD_HASH" ]; then
            echo "no_change=true" >> $GITHUB_OUTPUT
            echo "CIDR not changed; exiting."
            exit 0
          fi
          echo "$NEW_HASH" > last_cidr_sha.txt
          echo "no_change=false" >> $GITHUB_OUTPUT

      - name: Generate .mrs using mihomo docker image
        if: steps.check.outputs.no_change == 'false'
        run: |
          set -e
          DOCKER_IMAGE=metacubex/mihomo:v1.19.15
          docker pull "${DOCKER_IMAGE}"
          docker run --rm -v "${{ github.workspace }}:/work" "${DOCKER_IMAGE}" \
            mihomo convert-ruleset ipcidr text /work/cidr_all.txt /work/youtube_geoip.mrs
          stat -c '%s %n' youtube_geoip.mrs || true

      - name: Commit & push when changed
        if: steps.check.outputs.no_change == 'false'
        run: |
          set -e
          git add youtube_geoip.mrs last_cidr_sha.txt || true
          if git diff --cached --quiet; then
            echo "No file changes to commit."
            exit 0
          fi
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git commit -m "chore(rules): update youtube_geoip.mrs @ $(date -u +'%Y-%m-%d %H:%M:%S')"
          git push
